#
# Confirmation tests to run against a live web server.
#
# These act as a very basic sanity check.

defaults:
    request_headers:
        x-auth-token: $ENVIRON['GNOCCHI_SERVICE_TOKEN']

tests:
    - name: check /
      url: /

    # Fail to create archive policy
    - name: wrong archive policy content type
      desc: attempt to create archive policy with invalid content-type
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: text/plain
      status: 415
      response_strings:
          - Unsupported Media Type

    - name: wrong method
      desc: attempt to create archive policy with 'PUT' method
      url: /v1/archive_policy
      method: PUT
      request_headers:
          content-type: application/json
      status: 405

    - name: invalid authZ
      desc: x-auth-token is invalid
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
          x-auth-token: 'hello'
      data:
          name: medium
          definition:
              - granularity: 1 second
      status: 401

    - name: bad archive policy body
      desc: archive policy contains invalid key 'cowsay'
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          cowsay: moo
      status: 400
      response_strings:
          - "Invalid input: extra keys not allowed"

    - name: missing definition
      desc: archive policy is missing 'definition' keyword
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: medium
      status: 400
      response_strings:
          - "Invalid input: required key not provided"

    - name: empty definition
      desc: empty definition for archive policy
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: medium
          definition: []
      status: 400
      response_strings:
          - "Invalid input: length of value must be at least 1"

    - name: wrong value definition
      desc: invalid type of 'definition' key
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: somename
          definition: foobar
      status: 400
      response_strings:
          - "Invalid input: expected a list"

    - name: useless definition
      desc: invalid archive policy definition
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: medium
          definition:
              - cowsay: moo
      status: 400
      response_strings:
          - "Invalid input: extra keys not allowed"

    #
    # Create archive policy
    #

    - name: create archive policy
      desc: create archve policy 'gabbilive' for live tests
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: gabbilive
          back_window: 0
          definition:
              - granularity: 1 second
                points: 60
              - granularity: 2 second
                timespan: 1 minute
              - points: 5
                timespan: 5 minute
          aggregation_methods:
              - mean
              - min
              - max
      response_headers:
          location: $SCHEME://$NETLOC/v1/archive_policy/gabbilive
      status: 201

    # Retrieve it correctly and then poorly

    - name: get archive policy
      desc: retrieve archive policy 'gabbilive' and asster its values
      url: $LOCATION
      response_headers:
          content-type: /application/json/
      response_json_paths:
          $.name: gabbilive
          $.back_window: 0
          $.definition[0].granularity: "0:00:01"
          $.definition[0].points: 60
          $.definition[0].timespan: "0:01:00"
          $.definition[1].granularity: "0:00:02"
          $.definition[1].points: 30
          $.definition[1].timespan: "0:01:00"
          $.definition[2].granularity: "0:01:00"
          $.definition[2].points: 5
          $.definition[2].timespan: "0:05:00"
      response_strings:
          '"aggregation_methods": ["max", "min", "mean"]'

    - name: get wrong accept
      desc: invalid 'accept' header
      url: /v1/archive_policy/medium
      request_headers:
          accept: text/plain
      status: 406

    # Unexpected methods

    - name: post single archive
      desc: unexpected 'POST' request to archive policy
      url: /v1/archive_policy/gabbilive
      method: POST
      status: 405

    - name: put single archive
      desc: unexpected 'PUT' request to archive policy
      url: /v1/archive_policy/gabbilive
      method: PUT
      status: 405

    # Duplicated archive policy names ain't allowed

    - name: create duplicate archive policy
      desc: create archve policy 'gabbilive' for live tests
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: gabbilive
          definition:
              - granularity: 30 second
                points: 60
      status: 409
      response_strings:
          - Archive policy gabbilive already exists

    # Create a unicode named policy

    - name: post unicode policy name
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: ✔éñ☃
          definition:
              - granularity: 1 minute
                points: 20
      status: 201
      response_headers:
          location: $SCHEME://$NETLOC/v1/archive_policy/%E2%9C%94%C3%A9%C3%B1%E2%98%83
      response_json_paths:
          name: ✔éñ☃

    - name: retrieve unicode policy name
      url: $LOCATION
      response_json_paths:
          name: ✔éñ☃

    - name: delete unicode archive policy
      url: /v1/archive_policy/%E2%9C%94%C3%A9%C3%B1%E2%98%83
      method: DELETE
      status: 204

    # It really is gone

    - name: confirm delete
      desc: assert deleted unicode policy is not available
      method: GET
      url: /v1/archive_policy/%E2%9C%94%C3%A9%C3%B1%E2%98%83
      status: 404

    # Fail to delete one that does not exist

    - name: delete missing archive
      desc: delete non-existent archive policy
      url: /v1/archive_policy/grandiose
      method: DELETE
      status: 404
      response_strings:
          - Archive policy grandiose does not exist

    # Attempt to create illogical policies

    - name: create illogical policy
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: complex
          definition:
              - granularity: 1 second
                points: 60
                timespan: "0:01:01"
      status: 400
      response_strings:
          - timespan ≠ granularity × points

    - name: create identical granularities policy
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: complex
          definition:
              - granularity: 1 second
                points: 60
              - granularity: 1 second
                points: 120
      status: 400
      response_strings:
          - "More than one archive policy uses granularity `1.0'"

    - name: policy invalid unit
      desc: invalid unit for archive policy 'timespan' key
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: 227d0e1f-4295-4e4b-8515-c296c47d71d3
          definition:
              - granularity: 1 second
                timespan: "1 shenanigan"
      status: 400

    #
    # Archive policy rules
    #

    - name: create archive policy rule1
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
      data:
          name: gabbilive_rule
          metric_pattern: "live.*"
          archive_policy_name: gabbilive
      status: 201
      response_json_paths:
        $.metric_pattern: "live.*"
        $.archive_policy_name: gabbilive
        $.name: gabbilive_rule

    - name: create invalid archive policy rule
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
      data:
        name: test_rule
        metric_pattern: "disk.foo.*"
      status: 400

    - name: missing auth archive policy rule
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
          x-auth-token: 'hello'
      data:
        name: test_rule
        metric_pattern: "disk.foo.*"
        archive_policy_name: low
      status: 401

    - name: wrong archive policy rule content type
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: text/plain
      status: 415
      response_strings:
          - Unsupported Media Type

    - name: bad archive policy rule body
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
      data:
          whaa: foobar
      status: 400
      response_strings:
          - "Invalid input: extra keys not allowed"

    # get an archive policy rules

    - name: get all archive policy rules
      url: /v1/archive_policy_rule
      status: 200
      response_strings:
        '"metric_pattern": "live.*", "archive_policy_name": "gabbilive", "name": "gabbilive_rule"'

    - name: get unknown archive policy rule
      url: /v1/archive_policy_rule/foo
      status: 404


    - name: get archive policy rule
      url: /v1/archive_policy_rule/gabbilive_rule
      status: 200
      response_json_paths:
          $.metric_pattern: "live.*"
          $.archive_policy_name: "gabbilive"
          $.name: "gabbilive_rule"

    - name: delete archive policy in use
      desc: fails due to https://bugs.launchpad.net/gnocchi/+bug/1569781
      url: /v1/archive_policy/gabbilive
      method: DELETE
      status: 400

    #
    # Metrics
    #


    - name: get all metrics
      url: /v1/metric
      status: 200

    - name: create metric with name and rule
      url: /v1/metric
      request_headers:
          content-type: application/json
      method: post
      data:
          name: "live.io.rate"
      status: 201
      response_json_paths:
          $.archive_policy_name: gabbilive
          $.name: live.io.rate

    - name: delete metric
      url: $LOCATION
      method: DELETE
      status: 204

    - name: create metric with name and policy
      url: /v1/metric
      request_headers:
          content-type: application/json
      method: post
      data:
          name: "aagabbi.live.metric"
          archive_policy_name: "gabbilive"
      status: 201
      response_json_paths:
          $.archive_policy_name: gabbilive
          $.name: "aagabbi.live.metric"

    - name: get valid metric id
      url: $LOCATION
      status: 200
      response_json_paths:
        $.archive_policy.name: gabbilive

    - name: delete the metric
      url: /v1/metric/$RESPONSE['$.id']
      method: DELETE
      status: 204

    - name: create metric bad archive policy
      url: /v1/metric
      method: POST
      request_headers:
          content-type: application/json
      data:
          archive_policy_name: 2e2675aa-105e-4664-a30d-c407e6a0ea7f
      status: 400
      response_strings:
          - Archive policy 2e2675aa-105e-4664-a30d-c407e6a0ea7f does not exist

    - name: create metric bad content-type
      url: /v1/metric
      method: POST
      request_headers:
          content-type: plain/text
      data:
          archive_policy_name: cookies
      status: 415


    #
    # Cleanup
    #

    - name: delete archive policy rule
      url: /v1/archive_policy_rule/gabbilive_rule
      method: DELETE
      status: 204

    - name: confirm delete archive policy rule
      url: /v1/archive_policy_rule/gabbilive_rule
      method: DELETE
      status: 404


    #
    # Resources section
    #

    - name: root of resource
      url: /v1/resource
      response_json_paths:
          $.volume: $SCHEME://$NETLOC/v1/resource/volume

    - name: typo of resource
      url: /v1/resoue
      status: 404

    - name: typo of resource extra
      url: /v1/resource/foobar
      status: 404

    - name: identity resource
      desc: maybe there's are no identity resources yet
      url: /v1/resource/identity
      status: 200

    - name: ceph_account resource
      desc: maybe there's are no ceph_account resources yet
      url: /v1/resource/ceph_account
      status: 200

    - name: instance resource
      desc: maybe there are no instance resources yet
      url: /v1/resource/instance
      status: 200

    - name: instance_network_interface resource
      desc: maybe there's are no instance_network_interface resources yet
      url: /v1/resource/instance_network_interface
      status: 200

    - name: instance_disk resource
      desc: maybe there's are no instance_disk resources yet
      url: /v1/resource/instance_disk
      status: 200

    - name: image resource
      desc: maybe there's are no image resources yet
      url: /v1/resource/image
      status: 200

    - name: ipmi resource
      desc: maybe there's are no ipmi resources yet
      url: /v1/resource/ipmi
      status: 200

    - name: network resource
      desc: maybe there's are no network resources yet
      url: /v1/resource/network
      status: 200

    - name: orchestration resource
      desc: maybe there's are no orchestration resources yet
      #url: /v1/resource/orchestration
      url: /v1/resource/stack
      status: 200

    - name: swift_account resource
      desc: maybe there's are no swift_account resources yet
      url: /v1/resource/swift_account
      status: 200

    - name: volume resource
      desc: maybe there's are no volume resources yet
      url: /v1/resource/volume
      status: 200

    - name: instance resource bad accept
      desc: Expect 406 on bad accept type
      request_headers:
          accept: text/plain
      url: /v1/resource/instance
      status: 406
      response_strings:
          - 406 Not Acceptable

    - name: instance resource complex accept
      desc: failover accept media type appropriately
      request_headers:
          accept: text/plain, application/json; q=0.8
      url: /v1/resource/instance
      status: 200

    - name: post instance resource
      url: /v1/resource/instance
      method: post
      request_headers:
          content-type: application/json
      data:
          id: 2ae35573-7f9f-4bb1-aae8-dad8dff5706e
          user_id: 126204ef-989a-46fd-999b-ee45c8108f31
          project_id: 98e785d7-9487-4159-8ab8-8230ec37537a
          flavor_id: "2"
          image_ref: http://image
          host: compute1
          display_name: myvm
          metrics:
              vcpus:
                  archive_policy_name: gabbilive
      status: 201
      response_json_paths:
          $.id: 2ae35573-7f9f-4bb1-aae8-dad8dff5706e
          $.user_id: 126204ef-989a-46fd-999b-ee45c8108f31
          $.project_id: 98e785d7-9487-4159-8ab8-8230ec37537a
          $.flavor_id: "2"

    - name: get instance resource
      url: $LOCATION
      status: 200
      response_json_paths:
          $.id: 2ae35573-7f9f-4bb1-aae8-dad8dff5706e
          $.user_id: 126204ef-989a-46fd-999b-ee45c8108f31
          $.project_id: 98e785d7-9487-4159-8ab8-8230ec37537a
          $.flavor_id: "2"

    - name: search for instance resource via user_id
      #url: /v1/search/resource/generic
      url: /v1/search/resource/instance
      method: POST
      request_headers:
        content-type: application/json
      data:
        =:
          user_id: "126204ef-989a-46fd-999b-ee45c8108f31"
      response_json_paths:
        $..id: 2ae35573-7f9f-4bb1-aae8-dad8dff5706e
        $..user_id: 126204ef-989a-46fd-999b-ee45c8108f31
        $..project_id: 98e785d7-9487-4159-8ab8-8230ec37537a
        $..display_name: myvm

    - name: search for instance resource via user_id and 'generic' type
      url: /v1/search/resource/generic
      method: POST
      request_headers:
        content-type: application/json
      data:
        =:
          id: "2ae35573-7f9f-4bb1-aae8-dad8dff5706e"
      response_strings:
        '"user_id": "126204ef-989a-46fd-999b-ee45c8108f31"'

    - name: search for instance resource via user_id and project_id
      url: /v1/search/resource/generic
      method: POST
      request_headers:
        content-type: application/json
      data:
        and:
          - =:
              user_id: "126204ef-989a-46fd-999b-ee45c8108f31"
          - =:
              project_id: "98e785d7-9487-4159-8ab8-8230ec37537a"
      response_strings:
        '"id": "2ae35573-7f9f-4bb1-aae8-dad8dff5706e"'

    - name: patch instance resource
      url: /v1/resource/instance/2ae35573-7f9f-4bb1-aae8-dad8dff5706e
      method: patch
      request_headers:
          content-type: application/json
      data:
          host: compute2
      status: 200
      response_json_paths:
          host: compute2

    - name: post some measures to the metric on instance
      url: /v1/resource/instance/2ae35573-7f9f-4bb1-aae8-dad8dff5706e/metric/vcpus/measures
      request_headers:
          content-type: application/json
      method: POST
      data:
          - timestamp: "2015-03-06T14:33:57"
            value: 2
          - timestamp: "2015-03-06T14:34:12"
            value: 2
      status: 202

    - name: get instance measures with poll
      url: /v1/resource/instance/2ae35573-7f9f-4bb1-aae8-dad8dff5706e/metric/vcpus/measures
      # wait up to 60 seconds before policy is deleted
      poll:
          count: 60
          delay: 1
      response_json_paths:
          $[0][2]: 2
          $[1][2]: 2


    #
    # Search for resources
    #

    - name: typo of search
      url: /v1/search/notexists
      status: 404

    - name: typo of search in resource
      url: /v1/search/resource/foobar
      status: 404

    - name: search with invalid uuid
      url: /v1/search/resource/generic
      method: POST
      request_headers:
        content-type: application/json
      data:
        =:
          id: "cd9eef"


    - name: delete instance resource
      url: /v1/resource/generic/2ae35573-7f9f-4bb1-aae8-dad8dff5706e
      method: DELETE
      status: 204

      # assert resource is really deleted
    - name: assert resource resource is deleted
      url: /v1/resource/generic/2ae35573-7f9f-4bb1-aae8-dad8dff5706e
      method: GET
      status: 404

    - name: post instance resource no data
      url: /v1/resource/generic
      method: post
      request_headers:
          content-type: application/json
      status: 400

    - name: delete single archive policy cleanup.
      url: /v1/archive_policy/gabbilive
      method: DELETE
      poll:
          count: 60
          delay: 1
      status: 204

    # It really is gone

    - name: confirm delete of cleanup
      url: /v1/archive_policy/gabbilive
      status: 404

