fixtures:
    - ConfigFixture

tests:
    - name: wrong metric
      desc: https://bugs.launchpad.net/gnocchi/+bug/1429949
      url: /v1/metric/foobar
      status: 404

    - name: create archive policy
      desc: for later use
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
          x-roles: admin
      data:
          name: cookies
          definition:
              - granularity: 1 second
      status: 201

    - name: create archive policy rule
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
          x-roles: admin
      data:
        name: test_rule
        metric_pattern: "disk.io.*"
        archive_policy_name: cookies
      status: 201

    - name: create alt archive policy
      url: /v1/archive_policy
      method: POST
      request_headers:
          content-type: application/json
          x-roles: admin
      data:
          name: cream
          definition:
              - granularity: 5 second
      status: 201

    - name: create alt archive policy rule
      desc: extra rule that won't be matched
      url: /v1/archive_policy_rule
      method: POST
      request_headers:
          content-type: application/json
          x-roles: admin
      data:
        name: test_ignore_rule
        metric_pattern: "disk.*"
        archive_policy_name: cream
      status: 201

    - name: get metric empty
      url: /v1/metric
      status: 200
      response_strings:
          - "[]"

    - name: create metric with name
      url: /v1/metric
      request_headers:
          content-type: application/json
      method: post
      data:
          name: "disk.io.rate"
      status: 201
      response_json_paths:
          $.archive_policy_name: cookies
          $.name: disk.io.rate

    - name: create metric with name no rule
      url: /v1/metric
      request_headers:
          content-type: application/json
      method: post
      data:
          name: "volume.io.rate"
      status: 400
      response_strings:
          - No archive policy name specified and no archive policy rule found matching the metric name volume.io.rate

    - name: create metric bad archive policy
      url: /v1/metric
      method: POST
      request_headers:
          content-type: application/json
      data:
          archive_policy_name: bad-cookie
      status: 400
      response_strings:
          - Archive policy bad-cookie does not exist

    - name: create metric bad content-type
      url: /v1/metric
      method: POST
      request_headers:
          content-type: plain/text
      data:
          archive_policy_name: cookies
      status: 415

    - name: create valid metric
      url: /v1/metric
      method: POST
      request_headers:
          content-type: application/json
      data:
          archive_policy_name: cookies
      status: 201
      response_json_paths:
          $.archive_policy_name: cookies

    - name: get valid metric id
      url: /v1/metric/$RESPONSE['$.id']
      status: 200
      response_json_paths:
        $.archive_policy.name: cookies

    - name: push measurements to metric before epoch
      url: /v1/metric/$RESPONSE['$.id']/measures
      request_headers:
           content-type: application/json
      method: post
      data:
          - timestamp: "1915-03-06T14:33:57"
            value: 43.1
      status: 400
      response_strings:
        - Timestamp must be after Epoch

    - name: get valid metric id again
      url: /v1/metric
      status: 200

    - name: push measurements to metric
      url: /v1/metric/$RESPONSE['$[0].id']/measures
      request_headers:
           content-type: application/json
      method: post
      data:
          - timestamp: "2015-03-06T14:33:57"
            value: 43.1
          - timestamp: "2015-03-06T14:34:12"
            value: 12
      status: 202

    - name: create valid metric two
      url: /v1/metric
      method: POST
      request_headers:
          content-type: application/json
      data:
          archive_policy_name: cookies
      status: 201
      response_json_paths:
          $.archive_policy_name: cookies

    - name: push invalid measurements to metric
      url: /v1/metric/$RESPONSE['$.id']/measures
      request_headers:
           content-type: application/json
      method: post
      data:
          - timestamp: "2015-03-06T14:33:57"
            value: 12
          - timestamp: "2015-03-06T14:34:12"
            value: "foobar"
      status: 400

    - name: create valid metric three
      url: /v1/metric
      method: POST
      request_headers:
          content-type: application/json
      data:
          archive_policy_name: cookies
      status: 201
      response_json_paths:
          $.archive_policy_name: cookies

    - name: push invalid measurements to metric bis
      url: /v1/metric/$RESPONSE['$.id']/measures
      request_headers:
           content-type: application/json
      method: post
      data: 1
      status: 400

    - name: add measure unknown metric
      url: /v1/metric/fake/measures
      request_headers:
          content-type: application/json
      method: post
      data:
          - timestamp: "2015-03-06T14:33:57"
            value: 43.1
      status: 404

    - name: get metric list
      url: /v1/metric
      status: 200
      response_json_paths:
          $[0].archive_policy.name: cookies

    - name: get measurements from metric
      url: /v1/metric/$RESPONSE['$[0].id']/measures
      status: 200

    - name: get metric list for start test
      url: /v1/metric
      status: 200
      response_json_paths:
          $[0].archive_policy.name: cookies

    - name: get measurements by start
      url: /v1/metric/$RESPONSE['$[0].id']/measures?start=2015-03-06T14:33:57
      status: 200

    - name: get measures unknown metric
      url: /v1/metric/fake/measures
      status: 404

    - name: get metric list for aggregates
      url: /v1/metric
      status: 200
      response_json_paths:
          $[0].archive_policy.name: cookies

    - name: get measure unknown aggregates
      url: /v1/aggregation/metric?metric=$RESPONSE['$[0].id']&aggregation=last
      status: 404
      response_strings:
          - Aggregation method 'last' for metric $RESPONSE['$[0].id'] does not exist

    - name: aggregate measure unknown metric
      url: /v1/aggregation/metric?metric=cee6ef1f-52cc-4a16-bbb5-648aedfd1c37
      status: 404
      response_strings:
          - Metric cee6ef1f-52cc-4a16-bbb5-648aedfd1c37 does not exist

    - name: get metric list for delete
      url: /v1/metric
      status: 200
      response_json_paths:
          $[0].archive_policy.name: cookies

    - name: delete metric
      url: /v1/metric/$RESPONSE['$[0].id']
      method: DELETE
      status: 204

    - name: delete non existent metric
      url: /v1/metric/foo
      method: DELETE
      status: 404
